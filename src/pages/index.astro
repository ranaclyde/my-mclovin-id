---
import Select from '@/components/ui/Select.astro'
import Layout from '@/layouts/Layout.astro'
import Input from '@/components/ui/Input.astro'

const genresOptions = [
  { value: 'F', text: 'Female' },
  { value: 'M', text: 'Male' },
  { value: 'O', text: 'Other' },
]
---

<Layout title="Welcome to Astro.">
  <main class="mx-auto w-full max-w-screen-lg">
    <h1 class="text-5xl text-white font-bold text-center">Welcome to Astro</h1>
    <section class="flex gap-4 my-8">
      <canvas
        id="myCanvas"
        class="rounded-md bg-transparent border border-slate-400"
        width="527"
        height="326"
        style="background-color: aqua;"></canvas>
      <form id="form" class="w-full">
        <Input id="name" label="Name" />
        <Input id="dob" type="date" label="DOB" />
        <Select id="sex" label="Genre" options={genresOptions} />
      </form>
    </section>
  </main>
</Layout>

<script>
  const canvas = document.getElementById('myCanvas') as HTMLCanvasElement
  const ctx = canvas.getContext('2d')!

  // CONST
  const mclovin = {
    name: {
      value: 'McLOVIN',
      posX: 30,
      posY: 820,
    },
    dob: {
      value: '06/03/1981',
      posX: 700,
      posY: 364,
    },
    exp: {
      value: '06/03/2008',
      posX: 1160,
      posY: 364,
    },
    sex: {
      value: 'M',
      posX: 1244,
      posY: 477,
    },
    issueDate: {
      value: '06/18/1998',
      posX: 592,
      posY: 610,
    },
  }

  const fontSize = {
    title: 65,
    subtitle: 36,
  }

  const mcLovinImg = new Image()
  mcLovinImg.onload = () => {
    drawCanvas()
  }
  mcLovinImg.src = '/images/mclovin.webp'

  document.getElementById('form')?.addEventListener('input', function () {
    drawCanvas()
  })

  const name = document.getElementById('name') as HTMLInputElement
  const dob = document.getElementById('dob') as HTMLInputElement
  const sex = document.getElementById('sex') as HTMLSelectElement

  function drawCanvas() {
    ctx.clearRect(0, 0, canvas.width, canvas.height) // Limpiar el canvas
    ctx.drawImage(mcLovinImg, 0, 0, canvas.width, canvas.height)

    ctx.font = `bold ${fontSize.title / 3}px Arial`
    ctx.fillText(
      formattedDate(dob?.value) || mclovin.dob.value,
      mclovin.dob.posX / 3,
      mclovin.dob.posY / 3
    ) // DOB
    ctx.fillText(
      updateExpDate() || mclovin.exp.value,
      mclovin.exp.posX / 3,
      mclovin.exp.posY / 3
    ) // EXP
    ctx.fillText(
      name?.value || mclovin.name.value,
      mclovin.name.posX / 3,
      mclovin.name.posY / 3
    ) // NAME

    ctx.font = `bold ${fontSize.subtitle / 3}px Arial`
    ctx.fillText(
      sex?.value || mclovin.sex.value,
      mclovin.sex.posX / 3,
      mclovin.sex.posY / 3
    ) // SEX
    ctx.fillText(
      formattedDate(new Date().toDateString()) || mclovin.issueDate.value,
      mclovin.issueDate.posX / 3,
      mclovin.issueDate.posY / 3
    ) // ISSUE DATE
  }

  function formattedDate(date: string) {
    if (!date) return
    return new Intl.DateTimeFormat('en-US', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric',
      timeZone: 'UTC',
    }).format(Date.parse(date))
  }

  function updateExpDate() {
    if (!dob.value) return
    const dobDate = formattedDate(dob.value)
    const extractDate = dobDate?.split('/')
    if (!extractDate) return
    const year = new Date().getFullYear() + 10
    return `${extractDate[0]}/${extractDate[1]}/${year}`
  }
</script>

---
import Input from '@/components/ui/Input.astro'
import Button from '@/components/ui/Button.astro'
import Check from '@/icons/check.astro'
import Reload from '@/icons/reload.astro'
import Close from '@/icons/close.astro'
import ArrowFoward from '@/icons/arrowFoward.astro'
---

<Input
  id="upload"
  type="file"
  label="Upload your photo"
  class="mb-5"
  accept="image/png, image/jpeg, image/webp"
/>

<!-- Main modal -->
<div
  id="cropImgModal"
  tabindex="-1"
  aria-hidden="true"
  class="fixed top-0 left-0 right-0 z-50 hidden w-full p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full"
>
  <div class="relative w-full max-w-md max-h-full">
    <!-- Modal content -->
    <div class="relative rounded-lg shadow bg-gray-700">
      <!-- Modal header -->
      <div
        class="flex items-start justify-between p-4 border-b rounded-t border-gray-600"
      >
        <h3 class="text-xl font-semibold text-white">Upload and Crop image</h3>
        <button
          type="button"
          class="text-gray-400 bg-transparent rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center hover:bg-gray-600 hover:text-white"
          data-modal-hide="cropImgModal"
        >
          <Close />
          <span class="sr-only">Close modal</span>
        </button>
      </div>
      <!-- Modal body -->
      <div class="p-6 space-y-6">
        <div class="text-white h-60">
          <div id="croppieContainer"></div>
          <img
            class="mx-auto"
            alt="croppedImage"
            id="croppedImage"
            height="208"
            width="170"
          />
        </div>
        <div class="flex items-center justify-center gap-2">
          <Button id="btnCrop" isOnlyIcon>
            <Check class="w-4 h-4" />
          </Button>
          <Button id="resetCrop" isOnlyIcon>
            <Reload class="w-4 h-4" />
          </Button>
          <Button id="next" isOnlyIcon>
            <ArrowFoward class="w-4 h-4" />
          </Button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  import Croppie from 'croppie'
  import { Modal } from 'flowbite'
  import { $ } from '@/utils/domSelector'

  // Modal
  // select the two elements that we'll work with
  const $modalElement = $('#cropImgModal')
  const modal = new Modal($modalElement)

  // Declare variables
  const $upload = $<HTMLInputElement>('#upload')
  const $imgContainer = $('#croppieContainer')
  const $croppedImage = $<HTMLImageElement>('#croppedImage')
  const $cropButton = $<HTMLButtonElement>('#btnCrop')
  const $resetCropButton = $<HTMLButtonElement>('#resetCrop')
  const $nextButton = $<HTMLButtonElement>('#next')

  $croppedImage.style.display = 'none'
  $resetCropButton.style.display = 'none'

  // Initialize Cropie
  const croppieInstance = new Croppie($imgContainer, {
    viewport: { width: 170.6, height: 208.3, type: 'square' },
    boundary: { width: 210, height: 200 },
    enabledResize: true,
  })

  $upload?.addEventListener('change', (e) => {
    modal.show()
    const target = e.target as HTMLInputElement
    const file: File = (target.files as FileList)[0]
    const render = new FileReader()
    render.onload = (event) => {
      croppieInstance.bind({
        url: event.target?.result,
      })
    }
    render.readAsDataURL(file)
  })

  // Event close modal
  modal.updateOnHide(() => {
    if (!$croppedImage.src) {
      $upload.value = ''
    }
  })

  $nextButton?.addEventListener('click', () => modal.hide())

  // Handle crop button click
  $cropButton?.addEventListener('click', () => {
    croppieInstance.result('canvas').then((result: string) => {
      // Show Cropped Image
      $croppedImage.src = result
      $croppedImage.style.display = 'block'
      $resetCropButton.style.display = 'block'

      $cropButton.style.display = 'none'
      $imgContainer.style.display = 'none'
    })
  })

  $resetCropButton?.addEventListener('click', () => {
    $croppedImage.style.display = 'none'
    $resetCropButton.style.display = 'none'
    $imgContainer.style.display = 'block'
    $cropButton.style.display = 'block'
  })
</script>

<style is:global>
  @import url('croppie/croppie.css');
</style>
